/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.isu.cs2263.hw01;



import org.apache.commons.cli.*;

//import jdk.internal.joptsimple.HelpFormatter;

import java.io.IOException;
import java.nio.file.*;




public class App {
    

    public static void main(String[] args)  {

        Options options = createOptions();
        
        CommandLineParser parser = new DefaultParser();

        try {
            CommandLine cmd = parser.parse(options, args); 

            if(cmd.hasOption("help")){
                System.out.println("hi");
                printHelpMessage(options);
                System.exit(0);
            } else {
                batchDisplay(cmd);
                outputDisplay(cmd);
            }
            } catch (ParseException e) {
                System.out.println("Failed to parse: " + e.getMessage());
       
             }
        
    }
    
    private static Options createOptions(){
        Options options = new Options();
        Option helpOption = Option.builder("h").longOpt("help").desc("Print usage message.").build();
        Option batchOption = Option.builder("b").longOpt("batch").argName("file").hasArg().desc("Batch file that has expressions to evaluate").build();
        Option outputOption = Option.builder("o").longOpt("output").argName("file").hasArg().desc("Output File").build();

        options.addOption(helpOption);
        options.addOption(batchOption);
        options.addOption(outputOption);

        return options;
    }

    private static void printHelpMessage(Options options){
        HelpFormatter formatter = new HelpFormatter();
        formatter.printHelp("eval [OPTIONS] \n\n Evaluation of simple mathematical expressions\n\n", options);
        }

    private static String batchDisplay(CommandLine cmd){
        String file = "";
        if(cmd.hasOption("batch")){
            file = cmd.getOptionValue("batch");
            Path filePath = Path.of(file);
            if(Files.exists(filePath)){
                System.out.println(filePath);
            } else {
                System.out.println("The file doesn't exist for the batch input.");
                System.exit(1);
            }
        }
        return file;
    }

    private static void outputDisplay(CommandLine cmd){
        if(cmd.hasOption("output")){
            String file = cmd.getOptionValue("output");
            Path filePath = Path.of(file);
            try {
                Files.deleteIfExists(filePath);
                Files.createFile(filePath);
                System.out.println(filePath);

            } catch(IOException e) {
                System.out.println(e.getMessage());
                System.exit(1);
            }
        }
    }














    public static String getGreeting(){
            return "Hi";
    }
}
